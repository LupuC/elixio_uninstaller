name: release-please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run release-please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: simple

      - name: Get latest release version
        id: get_release
        run: |
          repo_owner='LupuC'
          repo_name='elixio_uninstaller'
          url="https://api.github.com/repos/${repo_owner}/${repo_name}/releases/latest"
          latest_version=$(curl -s $url | jq -r '.tag_name')
          echo ::set-output name=latest_version::${latest_version}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller customtkinter requests
      - name: Build executable
        run: |
          pyinstaller --onefile --noconsole --name elixio_uninstaller main.py
          ls -R  # This will list all files and directories recursively
      - name: Check if update is needed and update config.json
        run: |
          latest_version=${{ steps.get_release.outputs.latest_version }}
          current_version=$(cat config.json | jq -r '.version')
          if [ "$latest_version" != "$current_version" ]; then
            echo '{"name": "Elixio Uninstaller", "version": "'$latest_version'"}' > config.json
            git config --global user.email "github-actions@github.com"
            git config --global user.name "GitHub Actions"
            git add config.json
            git commit -m "Update version to $latest_version"
            git push origin main
          else
            echo "No update needed. Exiting gracefully."
          fi
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: ${{ steps.release.outputs.release_created }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: elixio_uninstaller
          asset_name: elixio_uninstaller
          tag: ${{ steps.release.outputs.tag_name }}
          overwrite: true

      - name: Upload config.json to release
        uses: svenstaro/upload-release-action@v2
        if: ${{ steps.release.outputs.release_created }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: config.json
          asset_name: config.json
          tag: ${{ steps.release.outputs.tag_name }}
          overwrite: true
