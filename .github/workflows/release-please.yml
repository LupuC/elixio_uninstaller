name: release-please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: windows-2019
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller customtkinter requests

      - name: Build executable
        run: |
          pyinstaller --onefile --noconsole --name elixio_uninstaller main.py
          dir /s

      - name: Get latest release version
        id: get_release
        run: |
          $repo_owner='LupuC'
          $repo_name='elixio_uninstaller'
          $url="https://api.github.com/repos/${repo_owner}/${repo_name}/releases/latest"
          $latest_version = (Invoke-RestMethod -Uri $url).tag_name
          echo "::set-output name=latest_version::$latest_version"

      - name: Check if update is needed and update config.json
        run: |
          $latest_version="${{ steps.get_release.outputs.latest_version }}"
          $current_version = (Get-Content config.json | ConvertFrom-Json).version
          if ($latest_version -ne $current_version) {
            @{name="Elixio Uninstaller"; version=$latest_version} | ConvertTo-Json | Set-Content config.json
            git config --global user.email "github-actions@github.com"
            git config --global user.name "GitHub Actions"
            git add config.json
            git commit -m "Update version to $latest_version"
            git push origin main
          } else {
            echo "No update needed. Exiting gracefully."
          }

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          body: |
            Automated release for commit ${{ github.sha }}
          draft: false
          prerelease: false

      - name: Upload executable to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/elixio_uninstaller.exe
          asset_name: elixio_uninstaller.exe
          asset_content_type: application/octet-stream

      - name: Upload config.json to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./config.json
          asset_name: config.json
          asset_content_type: application/json
