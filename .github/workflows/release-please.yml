name: Build and Release

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: simple
          package-name: elixio_uninstaller

  build-and-update:
    needs: release-please
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller customtkinter requests

      - name: Build executable
        run: pyinstaller --onefile --noconsole --name elixio_uninstaller main.py

      - name: Get latest release
        id: get_latest_release
        run: |
          $release = (Invoke-RestMethod -Uri "https://api.github.com/repos/${{ github.repository }}/releases/latest").tag_name
          echo "::set-output name=version::$release"

      - name: Update config.json
        run: |
          $version = '${{ steps.get_latest_release.outputs.version }}'
          $json = Get-Content config.json | ConvertFrom-Json
          $json.version = $version
          $json | ConvertTo-Json | Set-Content config.json

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/elixio_uninstaller.exe
          asset_name: elixio_uninstaller.exe
          tag: ${{ steps.get_latest_release.outputs.version }}
          overwrite: true

      - name: Upload config.json to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: config.json
          asset_name: config.json
          tag: ${{ steps.get_latest_release.outputs.version }}
          overwrite: true

      - name: Commit updated config.json
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add config.json
          git commit -m "Update config.json version" -a || echo "No changes to commit"
          git push
